package aromero.aplicacionvideo

import androidx.appcompat.app.AppCompatActivity 
import android.os.Bundle import android.util.Log 
import android.view.ViewGroup import android.widget.Button 
import android.widget. Toast 
import androidx.constraintlayout.widget.ConstraintLayout 
import com.google.android.youtube.player. YouTubeBaseActivity 
import com.google.android.youtube.player. YouTubeInitializationResult 
import com.google.android.youtube.player. YouTubePlayer 
import com.google.android.youtube.player. YouTubePlayerView
const val YOUTUBE_VIDEO_ID_KEY = "UE-1RPD JAY" 
const val PLAYLIST_ID_KEY = "PL5xXPE-53EGT4AFTZFRISKELI6h2UHrif"
class YouTubePlayerActivity : YouTubeBaseActivity, YouTubePlayer.OnInitializedListener{
val TAG = "YouTubePlayerActivity" 
override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState) 
setContentView(R.layout.activity-you_tube-player)
val layout = layoutInflater.inflate(R.layout.activity-you_tube-player, root: null) as ConstraintLayout setContentView(Layout)
val playerView = YouTubePlayerView(this) 
playerView.layoutParams = ConstraintLayout.LayoutParams
ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT
)
layout.addView(playerview)

playerView.initialize(getString(R.string.GOOGLE_API_KEY), this)
}

override fun on InitializationSuccess(
provider: YouTubePlayer.Provider?, 
player: YouTubePlayer?,
wasRestored: Boolean 
) 	{
Log.d(TAG, msg: "OnInitializationSuccess") 
Toast.makeText( context: this, text: "Initialized Succesfully", Toast.LENGTH_LONG).show(),

player?.setPlaybackEventListener(playbackEventListener), player?.setPlayerStateChangeListener(change Statelistener) 
if (!wasRestored) {
player?.cueVideo (YOUTUBE_VIDEO_ID_KEY)
}
}


override fun onInitializationFailure(
provider: YouTubePlayer.Provider?,
youtubeInitializationResult: YouTube Initialization Result? 
) {
Log.d(TAG, msg: "OnInitializationFailure") 
val REQUEST_CODE = 0 
if (YouTubeInitialization Result?.isUser RecoverableError == true) {
      youtube InitializationResult.getErrorDialog(this, REQUEST_CODE).show() 
} else {
Toast.makeText( context: this,text: "Error starting player", Toast.LENGTH_LONG).show()
}
}

private val playbackEventListener = object : YouTubePlayer.PlaybackEventListener { 
override fun onPlaying() {
Toast.makeText( context: this@YouTubePlayerActivity, text: "Playing", Toast.LENGTH_SHORT).show()
}
override fun onPaused() {
Toast.makeText( context: this@YouTubePlayerActivity, text:"Paused", Toast.LENGTH_SHORT).show()
}
override fun onStopped() {
}
override fun onBuffering (po: Boolean) {
}
override fun onSeekTo(po: Int) {
}
private val changeStatelistener = object : YouTubePlayer.PlayerStateChangelistener {
override fun onLoading() {
}

override fun onLoaded (pe: String?) {
}
override fun onAdStarted() {
Toast.makeText( context: this@YouTubePlayerActivity,text: "Add", Toast.LENGTH_SHORT).show()
}

override fun onVideoStarted() {
}
override fun onVideoEnded() {
Toast.makeText( context: this@YouTubePlayerActivity,
text: "Finished", Toast.LENGTH_SHORT).show()
}


override fun onError(po: YouTubePlayer.ErrorReason?){
}
}
}
